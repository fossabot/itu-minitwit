# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

networks:
  main:
    name: itu-minitwit-network
  elk:
    name: itu-minitwit-logging

services:
  mongodb:
    image: mongo:latest
    command: [--auth]
    environment:
      MONGO_INITDB_ROOT_USERNAME: radiator
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - mongodb_data_container:/data/db
    ports:
      - '27018:27017'
    networks:
      - main
    secrets:
      - db_password

  itu-minitwit-server:
    image: itu-minitwit-server
    container_name: minitwit
    build: 
      context: .
      dockerfile: 'MiniTwit.Server/Dockerfile'
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__MiniTwit:
    ports:
      - '80:80'
    networks:
      - main
    depends_on:
      - mongodb
    secrets:
      - source: connection_string
        target: ConnectionStrings__MiniTwit

  itu-minitwit-web:
    container_name: minitwit-web
    image: itu-minitwit-web
    build:
      context: .
      dockerfile: 'MiniTwit.Web/Dockerfile'
    ports:
      - '3000:3000'
    networks:
      - main
    depends_on:
      - itu-minitwit-server

  prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
          - ./Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
          - prometheus_storage:/prometheus
        ports:
          - "9090:9090"
        networks:
          - main

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: radiator
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_password
      GF_SERVER_HTTP_PORT: 3001
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: smtp.gmail.com:587
      GF_SMTP_USER: radiator.k.devops@gmail.com
      GF_SMTP_PASSWORD__FILE: /run/secrets/smtp_password
      GF_SMTP_FROM_ADDRESS: radiator.k.devops@gmail.com
    volumes:
      - ./Monitoring/Grafana/dashboard_provision.yml:/etc/grafana/provisioning/dashboards/main.yml
      - ./Monitoring/Grafana/alert_provision.yml:/etc/grafana/provisioning/alerting/main.yml
      - ./Monitoring/Grafana/notifications.yml:/etc/grafana/provisioning/alerting/notifications.yml
      - ./Monitoring/Grafana/data_sources.yml:/etc/grafana/provisioning/datasources/grafana.yml
      - ./Monitoring/Grafana/minitwit_dashboard.json:/var/lib/grafana/dashboards/minitwit_dashboard.json
      - grafana_storage:/var/lib/grafana
    ports:
      - "9091:3001"
    depends_on:
      - prometheus
    networks:
      - main
    secrets:
      - grafana_password
      - smtp_password

  elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
      environment:
          - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
          - "discovery.type=single-node"
          - "xpack.security.enabled=false"
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
      networks:
        - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    environment:
        - "elasticsearch.hosts='[\"http://elasticsearch:9200\"]'"
        - "xpack.security.enabled=false"
    volumes:
        - kibana-data:/usr/share/kibana/data
    networks:
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.9
    environment:
      - "ELK_USER=${ELK_USER}"
    user: root
    volumes:
      - ${ELK_DIR}/Logging/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk

  nginx:
      image: nginx:latest
      ports:
        - 9200:9200
        - 5601:5601
        - 8881:8881
        - 8882:8882
      networks:
        - elk
      volumes:
        - type: bind
          source: ${ELK_DIR}/Logging/nginx.conf
          target: /etc/nginx/nginx.conf
        - type: bind
          source: ${ELK_DIR}/Logging/.htpasswd
          target: /etc/nginx/.htpasswd

volumes:
  mongodb_data_container:
  grafana_storage:
  prometheus_storage:
  elasticsearch-data:
  kibana-data:

secrets:
  db_password:
    file: './.local/db_password.txt'
  connection_string:
    file: './.local/connection_string.txt'
  grafana_password:
    file: './.local/grafana_password.txt'
  smtp_password:
    file: './.local/smtp_password.txt'

name: Build & Test

on: 
  [push]
env: 
  NODE_ENV: development

jobs:
  build-test-backend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build MiniTwit backend
        run: dotnet build --no-restore

      - name: Run backend tests
        run: dotnet test --no-build --verbosity normal
  
  build-test-frontend:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: MiniTwit.Web/package-lock.json
      
      - name: Install dependencies
        run: |
          cd MiniTwit.Web
          npm ci

      - name: Build MiniTwit frontend
        run: |
          cd MiniTwit.Web
          npm run build --if-present

      - name: Run frontend tests
        run: | 
          mkdir .local
          echo ${{secrets.DB_CONNECTIONSTRING}} > .local/connection_string.txt
          echo ${{secrets.DB_PASSWORD}} > .local/db_password.txt
          docker-compose -f docker-compose.ui.yml up -d
          cd MiniTwit.Web/
          npm install
          cd tests/
          npx playwright test
          cd ../..
          docker-compose -f docker-compose.ui.yml down